name: CI
on:
  push:
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: ./gradlew check nativeImage
    - run: cp app/build/graal/hello-world* ./app-${{ matrix.os }}
      shell: bash
    - run: file ./app-${{ matrix.os }}
      shell: bash
    - run: ./app-${{ matrix.os }}
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        name: app-${{ matrix.os }}
        path: app-${{ matrix.os }}

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: ./gradlew check nativeImage
    - run: app/build/graal/hello-world

    # Check if the built binary can be run in a distroless container
    - run: docker build -t distroless .
    - run: docker run distroless

    - uses: actions/upload-artifact@v2
      with:
        name: my-binary
        path: app/build/graal/hello-world

  check-without-jvm:
    runs-on: ubuntu-latest
    container: fedora
    needs: build
    steps:

    - uses: actions/download-artifact@v2
      id: download
      with:
        name: 'my-binary'
        path: foo

    - run: chmod +x foo/hello-world && ./foo/hello-world

  build-fedora:
    runs-on: ubuntu-latest
    container: fedora
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - run: dnf groupinstall -y "C Development Tools and Libraries"
    - run: dnf install -y zlib-static
    - name: Build
      run: ./gradlew check nativeImage
    - run: app/build/graal/hello-world

  build-jar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Build
      run: ./gradlew check distTar distZip
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact.tar
        path: app/build/distributions/app.tar
    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact.zip
        path: app/build/distributions/app.zip